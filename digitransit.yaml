apiVersion: v1
kind: Service
metadata:
  name: hsl-map-server
spec:
  selector:
    app: hsl-map-server
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: graphiql
spec:
  selector:
    app: graphiql
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: photon-pelias-adapter
spec:
  selector:
    app: photon-pelias-adapter
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: digitransit-ui
spec:
  selector:
    app: digitransit-ui
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: opentripplanner-data-con
spec:
  selector:
    app: opentripplanner-data-container
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: opentripplanner
spec:
  selector:
    app: opentripplanner
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: swu-ladesaeulen
spec:
  selector:
    app: swu-ladesaeulen
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: zeus-gbfs
spec:
  selector:
    app: zeus-gbfs
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentripplanner-data-container
  labels:
    app: opentripplanner-data-container
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opentripplanner-data-container
  template:
    metadata:
      labels:
        app: opentripplanner-data-container
    spec:
      containers:
      - name: opentripplanner-data-container
        image: stadtulm/opentripplanner-data-container-ulm:2020-11-06-1cafef5
        imagePullPolicy: "Always"
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentripplanner
  labels:
    app: opentripplanner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opentripplanner
  template:
    metadata:
      labels:
        app: opentripplanner
    spec:
      containers:
      - name: opentripplanner
        image: mfdz/opentripplanner:fe76ec41335f86acc5ea755a15cb4c3d4ea846d7
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: ROUTER_NAME
          value: ulm
        - name: ROUTER_DATA_CONTAINER_URL
          value: http://opentripplanner-data-con
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: digitransit-ui
  labels:
    app: digitransit-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: digitransit-ui
  template:
    metadata:
      labels:
        app: digitransit-ui
    spec:
      containers:
      - name: digitransit-ui
        image: verschwoerhaus/digitransit-ui:8e98d30
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: CONFIG
          value: ulm
        - name: API_URL
          value: "https://api.digitransit.ulm.dev"
        - name: OTP_URL
          value: "https://api.digitransit.ulm.dev/routing/v1/routers/ulm/"
        - name: GEOCODING_BASE_URL
          value: "https://api.digitransit.ulm.dev/geocoding/v1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hsl-map-server
  labels:
    app: hsl-map-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hsl-map-server
  template:
    metadata:
      labels:
        app: hsl-map-server
    spec:
      containers:
      - name: hsl-map-server
        image: verschwoerhaus/hsl-map-server:b4adf23
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: OTP_URL
          value: opentripplanner:8080/otp/routers/ulm/index/graphql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphiql
  labels:
    app: graphiql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: graphiql
  template:
    metadata:
      labels:
        app: graphiql
    spec:
      containers:
      - name: graphiql
        image: verschwoerhaus/graphiql:2019-10-30
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: URL_PREFIX
          value: https://api.digitransit.ulm.dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: photon-pelias-adapter
  labels:
    app: photon-pelias-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photon-pelias-adapter
  template:
    metadata:
      labels:
        app: photon-pelias-adapter
    spec:
      containers:
      - name: photon-pelias-adapter
        image: stadtulm/photon-pelias-adapter:47c824d
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: PHOTON_URL
          value: https://photon.stadtnavi.eu/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swu-ladesaeulen
  labels:
    app: swu-ladesaeulen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: swu-ladesaeulen
  template:
    metadata:
      labels:
        app: swu-ladesaeulen
    spec:
      containers:
      - name: swu-ladesaeulen
        image: stadtulm/swu-ladesaeulen:latest
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zeus-gbfs
  labels:
    app: zeus-gbfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zeus-gbfs
  template:
    metadata:
      labels:
        app: zeus-gbfs
    spec:
      containers:
      - name: zeus-gbfs
        image: stadtulm/wunderfleet-gbfs-opener:4230686
        imagePullPolicy: "Always"
        ports:
        - containerPort: 80
        env:
        - name: WUNDER_BACKEND_HOST
          valueFrom:
            secretKeyRef:
              name: wunderfleet-gbfs-opener-zeus
              key: WUNDER_BACKEND_HOST
        - name: WUNDER_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: wunderfleet-gbfs-opener-zeus
              key: WUNDER_API_TOKEN
